version: '3.8'

services:
  # Database Service (Mysql)
  mysql-db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: 'buildingpages'
      # So you don't have to use root, but you can if you like
      MYSQL_ROOT_USER: 'root'
      # Password for root access
      MYSQL_ROOT_PASSWORD: '1234567890'
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - mysql-db:/var/lib/mysql
    networks:
      - mynet

  front-end:
    build: 
      context: ./buildingpagesfrontend
      dockerfile: Dockerfile
    # container_name: frontend
    volumes:
      - './:/buildingpagesfrontend'
      - '/buildingpagesfrontend/node_modules'
    ports:
      - 3000:3000
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
  
  # App backend service
  # back-end:
  #   depends_on:
  #     - mysql-db
  #   # networks:
  #   #   - mynet
  #   build: 
  #     context: ./buildingpages
  #     dockerfile: Dockerfile
  #   restart: always
  #   ports:
  #     - 8080:8080
  #   environment:
  #     DB_HOST: 'jdbc:mysql://mysql_db:3306/buildingpages?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false'
  #     DB_USER: 'root'
  #     DB_PASSWORD: '1234567890'
  #   networks: 
  #     # Networks to join (Services on the same network can communicate with each other using their name)
  #     - backend
  #     - frontend
  
  
# Names our volume
volumes:
  mysql-db:
    driver: local

# Networks to be created to facilitate communication between containers
networks:
  mynet:
    driver: bridge